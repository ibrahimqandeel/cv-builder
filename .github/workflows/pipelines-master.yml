name: Build and Push Spring Boot Image to AWS ECR
on:
  push:
    branches: [ master ]
jobs:
  setup-build-publish-deploy:
    if: github.repository == 'ibrahimqandeel/cv-builder'
    name: Setup, Build, Publish And Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

        # Setup Java
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17
          server-id: github
          settings-path: ${{ github.workspace }}
        # Build And Test With Maven
      - name: Build And Test With Maven
        run: maven build -x test

        # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

        # Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

        # Build, tag, and push image to Amazon ECR
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ecr_prep_repo
          IMAGE_TAG: master
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

        # Push the new image ID in the Amazon ECS task definition
      - name: Push the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: cv-builder-cont
          image: ${{ steps.build-image.outputs.image }}

       # Deploy Amazon ECS task definition
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: cv-builder-service
          cluster: ecs-prep-cluster
          wait-for-service-stability: true
#
#
#
#
#        # Automatic Tagging of Releases
#      - name: Automatic Tagging of Releases
#        id: increment-git-tag
#        run: |
#          bash ./build/git_update.sh -v major
#
#        # Build, Tag, and Push the Image to Amazon ECR
#      - name: Build, Tag, and Push the Image to Amazon ECR
#        id: build-image
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: ecr_prep_repo
#          IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
#        run: |
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG